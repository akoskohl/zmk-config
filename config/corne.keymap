/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q               &kp W                 &kp E             &kp R                 &kp T        &kp Z    &kp U                  &kp I              &kp O                  &kp P                   &kp BSPC
&kp LCTRL  &hrml LEFT_SHIFT A  &hrml LEFT_CONTROL S  &hrml LEFT_ALT D  &hrml LEFT_COMMAND F  &kp G        &kp H    &hrmr RIGHT_COMMAND J  &hrmr RIGHT_ALT K  &hrmr RIGHT_CONTROL L  &hrmr RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT  &kp Y               &kp X                 &kp C             &kp V                 &kp B        &kp N    &kp M                  &kp COMMA          &kp DOT                &kp FSLH                &kp ESC
                                                     &mo 1             &mo 2                 &kp SPACE    &kp RET  &mo 3                  &mo 4
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_SEL 1  &trans  &kp F7  &kp F8  &kp F9  &kp F12      &trans   &kp N7        &kp N8  &kp N9  &kp C_VOLUME_UP   &kp BSPC
&bt BT_SEL 0  &trans  &kp F4  &kp F5  &kp F6  &kp F11      &trans   &kp N4        &kp N5  &kp N6  &kp C_PLAY_PAUSE  &trans
&bt BT_CLR    &trans  &kp F1  &kp F2  &kp F3  &kp F10      &trans   &kp NUMBER_1  &kp N2  &kp N3  &kp C_VOL_DN      &trans
                              &trans  &trans  &kp SPACE    &kp RET  &kp N0        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &kp CARET  &kp AMPS   &kp LPAR  &kp RPAR  &kp KP_MULTIPLY  &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans       &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH         &kp GRAVE
&trans  &trans  &trans  &trans  &trans  &trans       &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE         &kp TILDE
                        &trans  &trans  &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp KP_MULTIPLY  &trans    &kp UP_ARROW    &kp PAGE_UP    &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp CARET        &kp LEFT  &kp DOWN_ARROW  &kp RIGHT      &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp MINUS        &trans    &trans          &kp PAGE_DOWN  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans          &trans         &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
